#!/usr/bin/env python
# coding: utf-8

# # Project : Customer Lifetime Value Analysis

# In[9]:


import pandas as pd
import matplotlib as plt
import seaborn as sns
import matplotlib.pyplot as plt
import plotly.graph_objs as go
import plotly.express as px
import plotly.io as pio

pio.templates.default ="plotly_white"


# In[10]:


data = pd.read_csv("customer_acquisition_data.csv")
data.head()


# # Visualising the distribution for acquistion cost and revenue generated by the customer using histograms:

# In[11]:


# histogram for cost and revenue generated by the customer
fig, axes = plt.subplots(nrows=1, ncols=2, figsize=(12, 4))
sns.histplot(data['cost'], bins=5, kde=True, color='skyblue', ax=axes[0])
axes[0].set_xlabel('Cost')
axes[0].set_ylabel('Count')
axes[0].set_title('Acquisition Cost Distribution')

sns.histplot(data['revenue'], bins=5, kde=True, color='lightgreen', ax=axes[1])
axes[1].set_xlabel('Revenue Generated')
axes[1].set_ylabel('Count')
axes[1].set_title('Revenue Generated Distribution')


# In[12]:


# horizontal bar chart showing cost of acquisition across various channels

cost_by_channel = data.groupby('channel')['cost'].sum().reset_index()
colors = ['skyblue', 'lightgreen', 'lightcoral', 'lightsalmon']

plt.barh(cost_by_channel["channel"],cost_by_channel["cost"],color=colors)
plt.xlabel('Acquisition Cost'),
plt.ylabel('Channels'),
plt.title('Acquisition Cost by Channel')
plt.show()


# In[13]:


#Horizontal bar graph determining which channels are most and least effective at converting customers
conversion_by_channel = data.groupby('channel')['conversion_rate'].sum().reset_index()
colors = ['skyblue', 'lightgreen', 'lightcoral', 'lightsalmon']

plt.barh(conversion_by_channel["channel"],conversion_by_channel["conversion_rate"],color=colors)
plt.xlabel('Conversion rate'),
plt.ylabel('Channels'),
plt.title('Conversion rate by Channel')
plt.show()


# # Calculating the total revenue by channel and finding the most and least profitable channels in terms of generating revenue

# In[14]:


#Pie chart visualisation determining total revenue by channel
revenue_by_channel = data.groupby('channel')['revenue'].sum().reset_index()

fig = px.pie(revenue_by_channel,
             values='revenue',
             names='channel' ,
             title='Total Revenue by Channel',
             hole =0.4, color_discrete_sequence =px.colors.qualitative.Pastel)
fig.show()


# In[15]:


## Calculating the return on investment (ROI) for each Channel
data['ROI'] = data['revenue']/data['cost']
ROI_by_channel = data.groupby('channel')['ROI'].sum().reset_index()
colors = ['skyblue', 'lightgreen', 'lightcoral', 'lightsalmon']

plt.barh(ROI_by_channel ["channel"],ROI_by_channel["ROI"],color=colors)
plt.xlabel('Return on Investment'),
plt.ylabel('Channels'),
plt.title('ROI by Channel')
plt.show()


# In[ ]:





# In[ ]:




